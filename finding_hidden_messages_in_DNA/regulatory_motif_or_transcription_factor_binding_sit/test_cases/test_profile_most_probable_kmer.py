

from profile_most_probable_kmer import *
import unittest


class TestProfileMostProbableKmer(unittest.TestCase):

    # @unittest.SkipTest
    def test_profile_most_probable_kmer_0(self):
        text = 'ACCTGTTTATTGCCTAAGTTCCGAACAAACCCAATATAGCCCGAGGGCCT'
        k = 5
        profile = {'A': [0.2, 0.2, 0.3, 0.2, 0.3],
                   'C': [0.4, 0.3, 0.1, 0.5, 0.1],
                   'G': [0.3, 0.3, 0.5, 0.2, 0.4],
                   'T': [0.1, 0.2, 0.1, 0.1, 0.2]}
        a = profile_most_probable_kmer(text, k, profile)
        b = 'CCGAG'
        self.assertEqual(a, b)

    def test_profile_most_probable_kmer_1(self):
        text = 'GATAGGTCCTCATAATAATGAAAATCTCTACACGGTTAAGGGATACGTCCATAGCCACGCAGACACCCTCCTGCCTTACATATCCGGAAGTAAGTGATAAGGTGCACCTCCAGTATAAGCGAAGGGCGAAAAGGTACATTTTGATGCGTTGCGAGGGATGTCGGTAGTCATGTATTTGCCCCAAGATTTACTTGCACACGCAGCGGATAATAGTTAGTCCACCCGTCATCCAGATGTGAACATGTTACACGCCAGAAGCACTTCTCAAAACCTGGTGTTGCCGATGCTGCTGGACCACCCGCTACTGCAACGGCAGAGAGGCCGTGGACCAAATCTTTTCGCGCTAAGACCCTAAGAACCTGAGTAGCGCCTCAACAGCCGGCGACAGCCCTGCATAACGCCACTAGTGCAACGTTTCTACTACGGCTAGCCACTCAGAGTCGTGGAGTACCCGGTGATCCCCGACCGCATGGTGGCGGTCCTTTCCCCTTAAGGCTCTGCACTTCCTAATTTGCAAAGTGTCATAATTCCCTATGTGAGTCTCTAGCTTTCTAGTGAGGCGGGTGGTCTTTTGTTTACGCAACCGCCGCAGGCAAAGAAATAAGCCGCCGTATGGAGTTCACGTGTCACGACAAGGCTGAGGTGACCTCAGAGCATAGAACTCATTCCGGATCTGTTCTTATGGGGACACTACGTGTGGTATTCTCGGCGTGTTCCATCCCCAACTTCATGTCTCGTAACCCGTAGACCGTCAGCTGGTCTCTACGTCCTGTAATTCTGCAATGAACATTTTTCTAATGGTCCCGTCCGAGGAAATCAACCAAGCTACTGGTCATCGGCATTCGCACACCTCTGCGTGTCCACTACCATACGGTCTAGATGGTTCACATGAGGGCGCCCGCGTGTATAATCGAGATGACAGTTCAAACCTTCGCACACAGTGACGTCCTGTTCCACCGAGGCCGTTTCGTTAGCCTCTGTTGTGGCACATAGGGCAGGC'
        k = 15
        profile = {'A': [0.212, 0.182, 0.227, 0.318, 0.288, 0.273, 0.167, 0.242, 0.348, 0.212, 0.288, 0.227, 0.242, 0.227, 0.258],
                   'C': [0.242, 0.394, 0.227, 0.212, 0.182, 0.303, 0.227, 0.333, 0.212, 0.242, 0.318, 0.121, 0.197, 0.242, 0.258],
                   'G': [0.227, 0.273, 0.258, 0.303, 0.258, 0.227, 0.227, 0.258, 0.167, 0.364, 0.197, 0.333, 0.303, 0.303, 0.242],
                   'T': [0.318, 0.152, 0.288, 0.167, 0.273, 0.197, 0.379, 0.167, 0.273, 0.182, 0.197, 0.318, 0.258, 0.227, 0.242]}
        a = profile_most_probable_kmer(text, k, profile)
        b = 'TCGAGATGACAGTTC'
        self.assertEqual(a, b)


if __name__ == '__main__':
    unittest.main()
